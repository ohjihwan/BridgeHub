MembermManage.jsx

// import React, { useState } from 'react';
// import '../../assets/scss/MemberManage.scss';
// import { DataGrid } from '@mui/x-data-grid';
// import IconButton from '@mui/material/IconButton';
// import DeleteIcon from '@mui/icons-material/Delete';
// const dummyMembers = [
//   {
//     id: 1,
//     email: 'example@example.com',
//     name: '이민우',
//     nickname: '민우',
//     region: '서울특별시',
//     education: '고졸',
//     major: '컴퓨터공학',
//     timezone: '12:00-18:00',
//     signupDate: '2024-02-10'
//   },
//   {
//     id: 2,
//     email: 'exam@example.com',
//     name: '오지환',
//     nickname: '지환',
//     region: '부산광역시',
//     education: '대학교',
//     major: '금융공학',
//     timezone: '18:00-24:00',
//     signupDate: '2024-06-05'
//   },
//   {
//     id: 3,
//     email: 'ex@example.com',
//     name: '노현지',
//     nickname: '현지',
//     region: '대구광역시',
//     education: '대학원',
//     major: '통계학',
//     timezone: '06:00-12:00',
//     signupDate: '2025-01-20'
//   }
// ];

// // DataGrid 한글 메시지 직접 지정
// const localeText = {
//   noRowsLabel: '표시할 데이터가 없습니다',
//   noResultsOverlayLabel: '검색 결과가 없습니다',
//   toolbarDensity: '밀도',
//   toolbarDensityLabel: '밀도',
//   toolbarDensityCompact: '좁게',
//   toolbarDensityStandard: '보통',
//   toolbarDensityComfortable: '넓게',
//   // 필요시 추가
// };

// function MemberManage() {
//   const [search, setSearch] = useState('');
//   const [rows, setRows] = useState(dummyMembers);

//   const filteredRows = rows.filter(member =>
//     member.name.includes(search) || member.email.includes(search)
//   );

//   const handleDelete = (id) => {
//     if (window.confirm('정말로 삭제하시겠습니까?')) {
//       setRows(prev => prev.filter(row => row.id !== id));
//     }
//   };

//   // minWidth 없이 flex만 남겨서, 화면이 줄어들 때 flex 비율대로 계속 줄어듦
//   const columns = [
//     { field: 'id', headerName: '회원ID', flex: 0.7, minWidth: 50, renderCell: (params) => `#${params.value}` },
//     {
//       field: 'email',
//       headerName: '이메일',
//       flex: 2,
//       minWidth: 100,
//       renderCell: (params) => (
//         <span
//           title={params.value}
//           style={{ overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap', display: 'block', width: '100%' }}
//         >
//           {params.value}
//         </span>
//       ),
//     },
//     { field: 'name', headerName: '이름', flex: 1, minWidth: 60 },
//     { field: 'nickname', headerName: '닉네임', flex: 1, minWidth: 60 },
//     { field: 'region', headerName: '지역', flex: 1, minWidth: 60 },
//     { field: 'education', headerName: '학력', flex: 1, minWidth: 60 },
//     { field: 'major', headerName: '전공', flex: 1, minWidth: 60 },
//     { field: 'timezone', headerName: '선호 시간대', flex: 1, minWidth: 80 },
//     { field: 'signupDate', headerName: '가입일', flex: 1, minWidth: 80 },
//     {
//       field: 'action',
//       headerName: '관리',
//       flex: 0.7,
//       minWidth: 50,
//       sortable: false,
//       filterable: false,
//       renderCell: (params) => (
//         <IconButton color="error" onClick={() => handleDelete(params.row.id)}>
//           <DeleteIcon />
//         </IconButton>
//       ),
//     },
//   ];

//   return (
//     <div className="member-manage">
//       <div className="member-header">
//         <h2>회원정보관리</h2>
//         <div className="search-box">
//           <input
//             type="text"
//             placeholder="이름, 이메일로 검색"
//             value={search}
//             onChange={(e) => setSearch(e.target.value)}
//             className="search-input"
//           />
//         </div>
//       </div>  
//       {/* DataGrid가 항상 가로 100%를 채우고, flex 컬럼으로 빈 공간 없이 반응형 */}
//       <div
//         className="member-table-container"
//         style={{
//           width: '100%',
//           minWidth: 800,
//           background: '#fff',
//           overflowX: 'auto',
//           padding: 0,
//           margin: 0,
//         }}
//       >
//         <DataGrid
//           rows={filteredRows}
//           columns={columns}
//           pageSize={5}
//           rowsPerPageOptions={[5]}
//           disableSelectionOnClick
//           autoHeight
//           localeText={localeText}
//           sx={{
//             minWidth: 800,
//             width: '100%',
//             maxWidth: '100%',
//             '& .MuiDataGrid-columnHeaders, & .MuiDataGrid-virtualScroller': {
//               minWidth: 800,
//               width: '100%',
//               maxWidth: '100%',
//             },
//           }}
//         />
//       </div>
//     </div>
//   );
// }

// export default MemberManage;

-----------------------------------------------------------------------------------------

ReportManage.jsx

// import React, { useState } from 'react';
// import '../../assets/scss/ReportManage.scss';

// const dummyReports = [
//   { 
//     id: 1, 
//     reporterId: 'user001',
//     reporter: '이민우', 
//     targetId: 'user002',
//     target: '오지환', 
//     reportType: '채팅방',
//     reason: '욕설',
//     date: '2024-01-15 14:30:25',
//     status: 'pending',
//     description: '스터디 그룹에서 지속적인 욕설 사용',
//     chatRoomName: '프로그래밍 스터디 A',
//     messageContent: '너 정말 바보같이 행동하네. 이런 식으로 하면 안 되잖아.',
//     reportContent: '지속적으로 다른 멤버들을 비하하는 발언을 하고 있습니다.',
//     penalty: '',
//     penaltyType: '',
//     adminNote: ''
//   },
//   { 
//     id: 2, 
//     reporterId: 'user003',
//     reporter: '노현지', 
//     targetId: 'user001',
//     target: '이민우', 
//     reportType: '게시글',
//     reason: '스팸',
//     date: '2024-01-14 09:15:42',
//     status: 'resolved',
//     description: '과도한 광고성 메시지 발송',
//     chatRoomName: '',
//     messageContent: '',
//     reportContent: '동일한 광고 내용을 여러 게시글에 반복적으로 올리고 있습니다.',
//     penalty: '게시글 작성 제한 7일',
//     penaltyType: '게시글 제한',
//     adminNote: '광고성 게시글 반복 등록으로 인한 제재'
//   },
//   { 
//     id: 3, 
//     reporterId: 'user004',
//     reporter: '김철수', 
//     targetId: 'user005',
//     target: '박영희', 
//     reportType: '채팅방',
//     reason: '부적절한 콘텐츠',
//     date: '2024-01-13 16:45:18',
//     status: 'pending',
//     description: '부적절한 이미지 공유',
//     chatRoomName: '취미 공유방',
//     messageContent: '[이미지 첨부됨]',
//     reportContent: '성인용 콘텐츠와 유사한 이미지를 공유했습니다.',
//     penalty: '',
//     penaltyType: '',
//     adminNote: ''
//   },
//   { 
//     id: 4, 
//     reporterId: 'user006',
//     reporter: '최영희', 
//     targetId: 'user007',
//     target: '정민수', 
//     reportType: '채팅방',
//     reason: '괴롭힘',
//     date: '2024-01-12 11:20:33',
//     status: 'resolved',
//     description: '지속적인 괴롭힘 행위',
//     chatRoomName: '영어 스터디 B',
//     messageContent: '너는 항상 실수만 하네. 다른 사람들처럼 잘하지 못하나?',
//     reportContent: '특정 멤버를 지속적으로 비하하고 괴롭히는 행위를 하고 있습니다.',
//     penalty: '채팅 제한 30일',
//     penaltyType: '채팅 제한',
//     adminNote: '지속적인 괴롭힘 행위로 인한 중간 제재'
//   },
//   { 
//     id: 5, 
//     reporterId: 'user008',
//     reporter: '한지민', 
//     targetId: 'user009',
//     target: '송혜교', 
//     reportType: '게시글',
//     reason: '저작권 침해',
//     date: '2024-01-11 13:55:07',
//     status: 'pending',
//     description: '무단으로 저작물을 복사하여 게시',
//     chatRoomName: '',
//     messageContent: '',
//     reportContent: '다른 사람의 저작물을 허가 없이 복사하여 게시했습니다.',
//     penalty: '',
//     penaltyType: '',
//     adminNote: ''
//   }
// ];

// function ReportManage() {
//   const [reports, setReports] = useState(dummyReports);
//   const [searchTerm, setSearchTerm] = useState('');
//   const [statusFilter, setStatusFilter] = useState('all');
//   const [typeFilter, setTypeFilter] = useState('all');
//   const [selectedReports, setSelectedReports] = useState([]);
//   const [selectedReport, setSelectedReport] = useState(null);
//   const [showDetail, setShowDetail] = useState(false);

//   const handleSearch = (e) => {
//     setSearchTerm(e.target.value);
//   };

//   const handleStatusFilter = (e) => {
//     setStatusFilter(e.target.value);
//   };

//   const handleTypeFilter = (e) => {
//     setTypeFilter(e.target.value);
//   };

//   const handleSelectAll = (e) => {
//     if (e.target.checked) {
//       setSelectedReports(filteredReports.map(report => report.id));
//     } else {
//       setSelectedReports([]);
//     }
//   };

//   const handleSelectReport = (reportId) => {
//     if (selectedReports.includes(reportId)) {
//       setSelectedReports(selectedReports.filter(id => id !== reportId));
//     } else {
//       setSelectedReports([...selectedReports, reportId]);
//     }
//   };

//   const handleViewDetail = (report) => {
//     setSelectedReport(report);
//     setShowDetail(true);
//   };

//   const handleCloseDetail = () => {
//     setShowDetail(false);
//     setSelectedReport(null);
//   };

//   const handleResolve = (reportId, penaltyType = '', penalty = '', adminNote = '') => {
//     setReports(reports.map(report => 
//       report.id === reportId ? { 
//         ...report, 
//         status: 'resolved',
//         penaltyType,
//         penalty,
//         adminNote
//       } : report
//     ));
//   };

//   const handleResolveSelected = () => {
//     setReports(reports.map(report => 
//       selectedReports.includes(report.id) ? { ...report, status: 'resolved' } : report
//     ));
//     setSelectedReports([]);
//   };

//   const handleDelete = (reportId) => {
//     if (window.confirm('정말로 삭제하시겠습니까?')) {
//       setReports(reports.filter(report => report.id !== reportId));
//     }
//   };

//   const handleDeleteSelected = () => {
//     if (selectedReports.length === 0) return;
    
//     if (window.confirm(`선택된 ${selectedReports.length}개의 신고를 정말로 삭제하시겠습니까?`)) {
//       setReports(reports.filter(report => !selectedReports.includes(report.id)));
//       setSelectedReports([]);
//     }
//   };

//   const filteredReports = reports.filter(report => {
//     const matchesSearch = 
//       report.reporter.toLowerCase().includes(searchTerm.toLowerCase()) ||
//       report.target.toLowerCase().includes(searchTerm.toLowerCase()) ||
//       report.reason.toLowerCase().includes(searchTerm.toLowerCase()) ||
//       report.reporterId.toLowerCase().includes(searchTerm.toLowerCase()) ||
//       report.targetId.toLowerCase().includes(searchTerm.toLowerCase());
    
//     const matchesStatus = statusFilter === 'all' || report.status === statusFilter;
//     const matchesType = typeFilter === 'all' || report.reportType === typeFilter;
    
//     return matchesSearch && matchesStatus && matchesType;
//   });

//   const getStatusBadge = (status) => {
//     const statusConfig = {
//       pending: { text: '대기중', class: 'status-pending' },
//       resolved: { text: '처리완료', class: 'status-resolved' }
//     };
    
//     const config = statusConfig[status];
//     return <span className={`status-badge ${config.class}`}>{config.text}</span>;
//   };

//   const getTypeBadge = (type) => {
//     const typeConfig = {
//       '채팅방': { text: '채팅방', class: 'type-chat' },
//       '게시글': { text: '게시글', class: 'type-post' }
//     };
    
//     const config = typeConfig[type];
//     return <span className={`type-badge ${config.class}`}>{config.text}</span>;
//   };

//   return (
//     <div className="report-manage">
//       <div className="report-header">
//         <h2>신고관리</h2>
//         <div className="report-actions">
//           {selectedReports.length > 0 && (
//             <>
//               <button 
//                 className="btn btn-primary"
//                 onClick={handleResolveSelected}
//               >
//                 선택 처리완료 ({selectedReports.length})
//               </button>
//               <button 
//                 className="btn btn-danger"
//                 onClick={handleDeleteSelected}
//               >
//                 선택 삭제 ({selectedReports.length})
//               </button>
//             </>
//           )}
//         </div>
//       </div>

//       <div className="report-filters">
//         <div className="search-box">
//           <input
//             type="text"
//             placeholder="신고자ID, 피신고자ID, 이름, 사유로 검색..."
//             value={searchTerm}
//             onChange={handleSearch}
//             className="search-input"
//           />
//         </div>
//         <div className="filter-box">
//           <select 
//             value={statusFilter} 
//             onChange={handleStatusFilter}
//             className="status-filter"
//           >
//             <option value="all">전체 상태</option>
//             <option value="pending">대기중</option>
//             <option value="resolved">처리완료</option>
//           </select>
//         </div>
//         <div className="filter-box">
//           <select 
//             value={typeFilter} 
//             onChange={handleTypeFilter}
//             className="type-filter"
//           >
//             <option value="all">전체 유형</option>
//             <option value="채팅방">채팅방</option>
//             <option value="채팅">채팅</option>
//           </select>
//         </div>
//       </div>

//       <div className="report-table-container">
//         <table className="report-table">
//           <thead>
//             <tr>
//               <th>
//                 <input
//                   type="checkbox"
//                   checked={selectedReports.length === filteredReports.length && filteredReports.length > 0}
//                   onChange={handleSelectAll}
//                 />
//               </th>
//               <th>신고ID</th>
//               <th>신고자ID</th>
//               <th>신고자</th>
//               <th>피신고자ID</th>
//               <th>피신고자</th>
//               <th>신고유형</th>
//               <th>신고사유</th>
//               <th>신고일시</th>
//               <th>처리상태</th>
//               <th>제재내용</th>
//               <th>액션</th>
//             </tr>
//           </thead>
//           <tbody>
//             {filteredReports.map(report => (
//               <tr key={report.id} className={report.status === 'resolved' ? 'resolved' : ''}>
//                 <td>
//                   <input
//                     type="checkbox"
//                     checked={selectedReports.includes(report.id)}
//                     onChange={() => handleSelectReport(report.id)}
//                   />
//                 </td>
//                 <td>#{report.id}</td>
//                 <td>{report.reporterId}</td>
//                 <td>{report.reporter}</td>
//                 <td>{report.targetId}</td>
//                 <td>{report.target}</td>
//                 <td>{getTypeBadge(report.reportType)}</td>
//                 <td>{report.reason}</td>
//                 <td>{report.date}</td>
//                 <td>{getStatusBadge(report.status)}</td>
//                 <td className="penalty-cell">
//                   {report.penalty ? (
//                     <div className="penalty-info">
//                       <span className="penalty-type">{report.penaltyType}</span>
//                       <span className="penalty-detail">{report.penalty}</span>
//                     </div>
//                   ) : (
//                     <span className="no-penalty">-</span>
//                   )}
//                 </td>
//                 <td>
//                   <div className="action-buttons">
//                     <button 
//                       className="btn btn-sm btn-info"
//                       onClick={() => handleViewDetail(report)}
//                     >
//                       상세보기
//                     </button>
//                     {report.status === 'pending' && (
//                       <button 
//                         className="btn btn-sm btn-success"
//                         onClick={() => handleResolve(report.id)}
//                       >
//                         처리완료
//                       </button>
//                     )}
//                     <button 
//                       className="btn btn-sm btn-danger"
//                       onClick={() => handleDelete(report.id)}
//                     >
//                       삭제
//                     </button>
//                   </div>
//                 </td>
//               </tr>
//             ))}
//           </tbody>
//         </table>
//         {filteredReports.length === 0 && (
//           <div className="no-data">
//             <p>검색 결과가 없습니다.</p>
//           </div>
//         )}
//       </div>

//       {/* 상세보기 모달 */}
//       {showDetail && selectedReport && (
//         <div className="detail-modal-overlay" onClick={handleCloseDetail}>
//           <div className="detail-modal" onClick={(e) => e.stopPropagation()}>
//             <div className="modal-header">
//               <h3>신고 상세정보 - #{selectedReport.id}</h3>
//               <button className="close-btn" onClick={handleCloseDetail}>×</button>
//             </div>
            
//             <div className="modal-content">
//               <div className="detail-section">
//                 <h4>기본 정보</h4>
//                 <div className="detail-grid">
//                   <div className="detail-item">
//                     <label>신고자 ID:</label>
//                     <span>{selectedReport.reporterId}</span>
//                   </div>
//                   <div className="detail-item">
//                     <label>신고자:</label>
//                     <span>{selectedReport.reporter}</span>
//                   </div>
//                   <div className="detail-item">
//                     <label>피신고자 ID:</label>
//                     <span>{selectedReport.targetId}</span>
//                   </div>
//                   <div className="detail-item">
//                     <label>피신고자:</label>
//                     <span>{selectedReport.target}</span>
//                   </div>
//                   <div className="detail-item">
//                     <label>신고유형:</label>
//                     <span>{getTypeBadge(selectedReport.reportType)}</span>
//                   </div>
//                   <div className="detail-item">
//                     <label>신고사유:</label>
//                     <span>{selectedReport.reason}</span>
//                   </div>
//                   <div className="detail-item">
//                     <label>신고일시:</label>
//                     <span>{selectedReport.date}</span>
//                   </div>
//                   <div className="detail-item">
//                     <label>처리상태:</label>
//                     <span>{getStatusBadge(selectedReport.status)}</span>
//                   </div>
//                 </div>
//               </div>

//               {selectedReport.chatRoomName && (
//                 <div className="detail-section">
//                   <h4>채팅방 정보</h4>
//                   <div className="detail-item">
//                     <label>채팅방명:</label>
//                     <span>{selectedReport.chatRoomName}</span>
//                   </div>
//                   {selectedReport.messageContent && (
//                     <div className="detail-item">
//                       <label>메시지 내용:</label>
//                       <div className="message-content">{selectedReport.messageContent}</div>
//                     </div>
//                   )}
//                 </div>
//               )}

//               <div className="detail-section">
//                 <h4>신고 내용</h4>
//                 <div className="detail-item">
//                   <label>신고 내용:</label>
//                   <div className="report-content">{selectedReport.reportContent}</div>
//                 </div>
//               </div>

//               {selectedReport.status === 'resolved' && (
//                 <div className="detail-section">
//                   <h4>처리 정보</h4>
//                   <div className="detail-grid">
//                     <div className="detail-item">
//                       <label>제재항목:</label>
//                       <span>{selectedReport.penaltyType || '-'}</span>
//                     </div>
//                     <div className="detail-item">
//                       <label>제재내용:</label>
//                       <span>{selectedReport.penalty || '-'}</span>
//                     </div>
//                     <div className="detail-item full-width">
//                       <label>관리자 메모:</label>
//                       <div className="admin-note">{selectedReport.adminNote || '-'}</div>
//                     </div>
//                   </div>
//                 </div>
//               )}

//               {selectedReport.status === 'pending' && (
//                 <div className="detail-section">
//                   <h4>처리하기</h4>
//                   <div className="resolve-form">
//                     <div className="form-group">
//                       <label>제재항목:</label>
//                       <select className="penalty-type-select">
//                         <option value="">선택하세요</option>
//                         <option value="경고">경고</option>
//                         <option value="채팅 제한">채팅 제한</option>
//                         <option value="게시글 제한">게시글 제한</option>
//                         <option value="계정 정지">계정 정지</option>
//                       </select>
//                     </div>
//                     <div className="form-group">
//                       <label>제재내용:</label>
//                       <input type="text" className="penalty-input" placeholder="예: 채팅 제한 7일" />
//                     </div>
//                     <div className="form-group">
//                       <label>관리자 메모:</label>
//                       <textarea className="admin-note-input" placeholder="처리 사유를 입력하세요"></textarea>
//                     </div>
//                     <div className="form-actions">
//                       <button className="btn btn-success">처리완료</button>
//                       <button className="btn btn-secondary" onClick={handleCloseDetail}>취소</button>
//                     </div>
//                   </div>
//                 </div>
//               )}
//             </div>
//           </div>
//         </div>
//       )}
//     </div>
//   );
// }

// export default ReportManage;

-----------------------------------------------------------------------------------------------------------

// import React, { useState } from 'react';
// import { Doughnut, Bar } from 'react-chartjs-2';
// import 'chart.js/auto'

// // --- Main Components ---

// const SummaryCard = ({ data }) => (
//   <div style={{ background: '#fff', padding: '20px', borderRadius: '8px', boxShadow: '0 2px 4px rgba(0,0,0,0.05)' }}>
//     <h3 style={{ margin: '0 0 5px 0', fontSize: '16px', color: '#555' }}>{data.title}</h3>
//     <p style={{ margin: '0 0 10px 0', fontSize: '12px', color: '#888' }}>{data.description}</p>
//     <div style={{ display: 'flex', alignItems: 'baseline', gap: '10px' }}>
//       <span style={{ fontSize: '28px', fontWeight: 'bold', color: '#333' }}>{data.value}</span>
//       <ChangeIndicator value={data.change} type={data.change > 0 ? 'up' : 'down'} />
//     </div>
//   </div>
// );

// const MemberDistributionCard = ({ data }) => {
//   const Bar = ({ label, value, color }) => (
//     <div style={{ display: 'flex', alignItems: 'center', margin: '5px 0' }}>
//       <span style={{ width: '60px', fontSize: '14px' }}>{label}</span>
//       <div style={{ flex: 1, background: '#eee', borderRadius: '4px', height: '20px', display: 'flex' }}>
//         <div style={{ width: `${value}%`, background: color, borderRadius: '4px' }}></div>
//       </div>
//       <span style={{ width: '40px', textAlign: 'right', fontSize: '14px' }}>{value}%</span>
//     </div>
//   );

//   return (
//     <div style={{ background: '#fff', padding: '20px', borderRadius: '8px', boxShadow: '0 2px 4px rgba(0,0,0,0.05)' }}>
//        <h3 style={{ margin: '0 0 5px 0', fontSize: '16px', color: '#555' }}>{data.title}</h3>
//       <p style={{ margin: '0 0 15px 0', fontSize: '12px', color: '#888' }}>{data.description}</p>
//       <div>
//         <Bar label="남성" value={data.gender.male} color="#3182ce" />
//         <Bar label="여성" value={data.gender.female} color="#e53e3e" />
//       </div>
//       <div style={{ marginTop: '20px' }}>
//         {data.age.map(item => (
//           <div key={item.range} style={{ display: 'flex', alignItems: 'center', margin: '5px 0' }}>
//             <span style={{ width: '60px', fontSize: '14px' }}>{item.range}</span>
//             <div style={{ flex: 1, background: '#eee', borderRadius: '4px', height: '20px', display: 'flex' }}>
//               <div style={{ width: `${item.male}%`, background: '#3182ce', borderRadius: '4px 0 0 4px' }}></div>
//               <div style={{ width: `${item.female}%`, background: '#e53e3e', borderRadius: '0 4px 4px 0' }}></div>
//             </div>
//           </div>
//         ))}
//       </div>
//     </div>
//   );
// };

// const SalesTrendCard = ({ data }) => (
//   <div style={{ background: '#fff', padding: '20px', borderRadius: '8px', boxShadow: '0 2px 4px rgba(0,0,0,0.05)' }}>
//     <h3 style={{ margin: '0 0 5px 0', fontSize: '16px', color: '#555' }}>{data.title}</h3>
//     <p style={{ margin: '0 0 15px 0', fontSize: '12px', color: '#888' }}>{data.description}</p>
//     {data.items.map(item => (
//       <div key={item.label} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: '10px 0', borderBottom: '1px solid #f0f0f0' }}>
//         <span style={{ fontSize: '14px', color: '#666' }}>{item.label}</span>
//         <div style={{display: 'flex', alignItems: 'baseline', gap: '10px'}}>
//           <span style={{ fontSize: '16px', fontWeight: '500' }}>{item.value}</span>
//           <ChangeIndicator value={item.change} type={item.change > 0 ? 'up' : 'down'} />
//         </div>
//       </div>
//     ))}
//   </div>
// );

// const Top10Table = ({ data }) => (
//   <div style={{ background: '#fff', padding: '20px', borderRadius: '8px', boxShadow: '0 2px 4px rgba(0,0,0,0.05)', gridColumn: 'span 2' }}>
//     <h3 style={{ margin: '0 0 5px 0', fontSize: '16px', color: '#555' }}>{data.title}</h3>
//     <p style={{ margin: '0 0 15px 0', fontSize: '12px', color: '#888' }}>{data.description}</p>
//     <table style={{ width: '100%', borderCollapse: 'collapse', fontSize: '14px' }}>
//       <thead>
//         <tr>
//           {data.headers.map(header => (
//             <th key={header} style={{ padding: '10px', background: '#f8f9fa', borderBottom: '2px solid #dee2e6', textAlign: 'left' }}>{header}</th>
//           ))}
//         </tr>
//       </thead>
//       <tbody>
//         {data.rows.map(row => (
//           <tr key={row[0]}>
//             {row.map((cell, index) => (
//               <td key={index} style={{ padding: '10px', borderBottom: '1px solid #f0f0f0' }}>
//                 {typeof cell === 'object' ? <ChangeIndicator value={cell.value} type={cell.type} /> : cell}
//               </td>
//             ))}
//           </tr>
//         ))}
//       </tbody>
//     </table>
//   </div>
// );

// // --- 기존 데이터 구조 ---
// const chartDataList = [
//   {
//     id: 'gender',
//     title: '성별',
//     data: {
//       labels: ['남성', '여성'],
//       datasets: [{ data: [50, 15], backgroundColor: ['#0043AC', '#FF9F40'] }]
//     },
//     legend: ['남성', '여성']
//   },
//   {
//     id: 'school',
//     title: '학력',
//     data: {
//       labels: ['고졸', '대학교', '대학원'],
//       datasets: [{ data: [35, 50, 15], backgroundColor: ['#0043AC', '#36A2EB', '#FF9F40'] }]
//     },
//     legend: ['고졸', '대학교', '대학원']
//   },
//   {
//     id: 'time',
//     title: '활동 시간대',
//     data: {
//       labels: ['06:00~12:00', '12:00~18:00', '18:00~24:00'],
//       datasets: [{ data: [35, 50, 15], backgroundColor: ['#0043AC', '#36A2EB', '#FF9F40'] }]
//     },
//     legend: ['06:00~12:00', '12:00~18:00', '18:00~24:00']
//   },
//   {
//     id: 'major',
//     title: '전공',
//     data: {
//       labels: ['인문•사회', '상경', '자연', '공학', '예체능', '의학', '법학', '융합'],
//       datasets: [{ data: [20, 15, 20, 10, 10, 10, 10, 5], backgroundColor: [' #0043AC', ' #36A2EB', ' #FF9F40', ' #FFCD56', ' #4BC0C0', ' #9966FF', ' #C9CBCF', ' #DE7C7D'] }]
//     },
//     legend: ['인문•사회', '상경', '자연', '공학', '예체능', '의학', '법학', '융합']
//   }
// ];

// const barData = {
//   labels: ['q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7'],
//   datasets: [
//     {
//       label: '신규 가입자 수',
//       data: [200, 400, 300, 500, 600, 700, 800],
//       backgroundColor: '#0043AC'
//     },
//     {
//       label: '총 접속자 수',
//       data: [400, 800, 600, 1000, 1200, 1400, 1600],
//       backgroundColor: '#FF9F40'
//     }
//   ]
// };

// const topActiveUsers = [
//   { name: '이민우', activity: 120 },
//   { name: '노현지', activity: 110 },
//   { name: '김철수', activity: 100 },
//   { name: '최영희', activity: 95 },
//   { name: '한지민', activity: 90 }
// ];

// const recentReports = [
//   { id: 1, reporter: '이민우', target: '오지환', reason: '욕설', date: '2024-01-15' },
//   { id: 2, reporter: '노현지', target: '이민우', reason: '스팸', date: '2024-01-14' },
//   { id: 3, reporter: '김철수', target: '박영희', reason: '부적절', date: '2024-01-13' },
//   { id: 4, reporter: '최영희', target: '정민수', reason: '괴롭힘', date: '2024-01-12' }
// ];

// const popularRooms = [
//   { name: '프로그래밍 스터디 A', count: 45 },
//   { name: '영어 스터디 B', count: 38 },
//   { name: '취미 공유방', count: 32 },
//   { name: '자유게시판', count: 28 },
//   { name: '정보공유방', count: 25 }
// ];

// // --- 헬퍼 컴포넌트 ---
// const Card = ({ children, style, ...rest }) => (
//   <div style={{
//     background: '#fff',
//     padding: '20px',
//     borderRadius: '8px',
//     boxShadow: '0 2px 4px rgba(0,0,0,0.05)',
//     ...style
//   }} {...rest}>
//     {children}
//   </div>
// );

// const MiniChartCard = ({ chart, isActive, onClick }) => (
//   <Card style={{ 
//     cursor: 'pointer', 
//     border: isActive ? '2px solid #6a6cff' : '2px solid transparent',
//     display: 'flex',
//     flexDirection: 'column',
//     alignItems: 'center',
//     justifyContent: 'space-between',
//     gap: '10px'
//   }} onClick={onClick}>
//     <h4 style={{ margin: 0, fontSize: '16px', color: '#555', textAlign: 'center' }}>{chart.title}</h4>
//     <div style={{ width: '100px', height: '100px' }}>
//       <Doughnut data={chart.data} options={{ plugins: { legend: { display: false } }, responsive: true, maintainAspectRatio: true }} />
//     </div>
//     <div style={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '2px 8px', fontSize: '11px', width: '100%' }}>
//       {chart.legend.map((item, idx) => (
//         <div key={item} style={{ display: 'flex', alignItems: 'center', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>
//           <span style={{ width: '8px', height: '8px', borderRadius: '50%', background: chart.data.datasets[0].backgroundColor[idx], marginRight: '4px', flexShrink: 0 }}></span>
//           {item}
//         </div>
//       ))}
//     </div>
//   </Card>
// );

// const ListCard = ({ title, items, renderItem }) => (
//   <Card>
//     <h3 style={{ margin: '0 0 15px 0', fontSize: '16px', color: '#555' }}>{title}</h3>
//     <ul style={{ listStyle: 'none', padding: 0, margin: 0 }}>
//       {items.map((item, index) => (
//         <li key={index} style={{ padding: '8px 0', borderBottom: '1px solid #f0f0f0', fontSize: '14px', color: '#666' }}>
//           {renderItem(item)}
//         </li>
//       ))}
//     </ul>
//   </Card>
// );

// // --- Main Statistics Component ---
// export default function Statistics() {
//   const [selectedChart, setSelectedChart] = useState(chartDataList[0]);

//   return (
//     <div style={{ padding: '20px', background: '#f4f7fa' }}>
//       {/* 페이지 제목 */}
//       <h1 style={{ fontSize: '28px', fontWeight: 'bold', color: '#333', marginBottom: '20px' }}>통계</h1>

//       {/* 상단: 작은 도넛 차트들 */}
//       <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '20px', marginBottom: '20px' }}>
//         {chartDataList.map(chart => (
//           <MiniChartCard
//             key={chart.id}
//             chart={chart}
//             isActive={selectedChart.id === chart.id}
//             onClick={() => setSelectedChart(chart)}
//           />
//         ))}
//       </div>

//       {/* 메인 그리드 */}
//       <div style={{ display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)', gap: '20px', alignItems: 'start' }}>
        
//         {/* 선택된 차트 상세 */}
//         <Card style={{ gridColumn: 'span 1' }}>
//           <h3 style={{ margin: '0 0 15px 0', fontSize: '16px', color: '#555' }}>{selectedChart.title} 상세</h3>
//           <div style={{ maxWidth: '300px', margin: '0 auto' }}>
//             <Doughnut data={selectedChart.data} options={{ plugins: { legend: { position: 'right' } } }} />
//           </div>
//         </Card>
        
//         {/* 방문자 수 바 차트 */}
//         <Card style={{ gridColumn: 'span 2' }}>
//           <h3 style={{ margin: '0 0 15px 0', fontSize: '16px', color: '#555' }}>방문자 수</h3>
//           <div style={{ height: '300px' }}>
//             <Bar data={barData} options={{ responsive: true, maintainAspectRatio: false }} />
//           </div>
//         </Card>
        
//         {/* 하단 위젯들 */}
//         <ListCard 
//           title="활동 TOP 5"
//           items={topActiveUsers}
//           renderItem={user => (
//             <div style={{ display: 'flex', justifyContent: 'space-between' }}>
//               <span>{user.name}</span>
//               <span style={{ fontWeight: 'bold', color: '#6a6cff' }}>{user.activity}회</span>
//             </div>
//           )}
//         />
//         <ListCard
//           title="인기 채팅방"
//           items={popularRooms}
//           renderItem={room => (
//             <div style={{ display: 'flex', justifyContent: 'space-between' }}>
//               <span>{room.name}</span>
//               <span style={{ fontWeight: 'bold', color: '#6a6cff' }}>{room.count}명</span>
//             </div>
//           )}
//         />
//         <ListCard
//           title="최근 신고"
//           items={recentReports}
//           renderItem={report => (
//             <div style={{ display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap' }}>
//               <span>{report.reporter} → {report.target}</span>
//               <span style={{ color: '#888' }}>({report.reason})</span>
//             </div>
//           )}
//         />
//       </div>

//       {/* 반응형 스타일 */}
//       <style>{`
//         @media (max-width: 900px) {
//           .main-grid {
//             grid-template-columns: 1fr !important;
//           }
//           .main-grid > div {
//             grid-column: span 1 !important;
//           }
//         }
//       `}</style>
//     </div>
//   );
// }